"use strict";angular.module("septWebRadioApp",["ngRoute","ngAnimate","ngCookies","ngResource","ui.bootstrap","septWebRadioControllers","septWebRadioDirectives","septWebRadioFactories","wu.masonry","angular-growl"]),angular.module("septWebRadioApp").config(["$routeProvider","$locationProvider","$httpProvider",function($routeProvider,$locationProvider,$httpProvider){$routeProvider.when("/index",{templateUrl:"partials/index/index.html",controller:"IndexCtrl"}).when("/stage",{templateUrl:"partials/stage/stage.html",controller:"StageCtrl"}).when("/replay",{templateUrl:"partials/replay/replay.html",controller:"ReplayCtrl"}).when("/topical",{templateUrl:"partials/topical/topical.html",controller:"TopicalCtrl"}).when("/door",{templateUrl:"partials/door/door.html",controller:"DoorCtrl"}).when("/backstage",{templateUrl:"partials/backstage/backstage.html",controller:"BackstageCtrl"}).when("/login",{templateUrl:"partials/sign/in.html",controller:"SignCtrl"}).when("/signup",{templateUrl:"partials/sign/up.html",controller:"SignCtrl"}).otherwise({redirectTo:"/index"}),$locationProvider.html5Mode(!0);var interceptor=["$rootScope","$q",function(scope,$q){function success(response){return response}function error(response){var status=response.status;if(401===status){var deferred=$q.defer();return scope.$broadcast("event:loginRequired"),deferred.promise}return $q.reject(response)}return function(promise){return promise.then(success,error)}}];$httpProvider.responseInterceptors.push(interceptor)}]).config(["growlProvider",function(growlProvider){growlProvider.globalTimeToLive(4e3),growlProvider.onlyUniqueMessages(!0)}]),angular.module("septWebRadioServices",[]),angular.module("septWebRadioServices"),angular.module("septWebRadioServices").service("applicationServices",["$http","$q","$cookieStore","soundCloudServices",function($http,$q,$cookieStore,soundCloudServices){this.clientId="",this.redirectUri="";var self=this;this.getInitApplication=function(){var token=$cookieStore.get("SC_Token"),initAppPromise=$http.get("init_application").success(function(result){self.clientId=result.clientId,self.redirectUri=result.url,SC.initialize({client_id:self.clientId,redirect_uri:self.redirectUri,access_token:token,scope:"non-expiring"})});return initAppPromise.then(function(){return token?soundCloudServices.me().then(function(user){return user}):void 0})},this.isConnected=function(){return soundCloudServices.isConnected()},this.getConnexionLabel=function(){return self.isConnected()?"Log Out":"Log In"},this.logInLogOut=function(){var promise;return promise=self.isConnected()?soundCloudServices.logOut():soundCloudServices.logIn(),promise.then(function(){return self.getConnexionLabel()})}}]),angular.module("septWebRadioServices"),angular.module("septWebRadioServices").service("soundcloudSearch",["$http","$q","limitToFilter",function($http,$q,limitToFilter){var self=this;this.searching=!1,this.deferred=void 0,this.maxItems=30,this.autoCompleteSearch=function($search){self.searching&&self.deferred.reject(),self.searching=!0,self.deferred=$q.defer(),SC.get("/tracks",{q:$search},self.resolveGetTracks);var promise=self.deferred.promise;return promise.then(function(response){return response}),promise},this.resolveGetTracks=function(response){self.deferred.resolve(limitToFilter(response,self.maxItems)),self.searching=!1}}]),angular.module("septWebRadioServices"),angular.module("septWebRadioServices").service("soundCloudServices",["$http","$q","$cookieStore",function($http,$q,$cookieStore){var self=this;this.soundCloudToken=void 0,this.soundCloudUser=void 0,this.meDeferred=void 0,this.getUser=function(){return self.soundCloudUser},this.isConnected=function(){return self.soundCloudUser?!0:!1},this.logIn=function(){var deferred=$q.defer(),promise=deferred.promise;return SC.connect(function(){self.soundCloudToken=SC.accessToken(),$cookieStore.put("SC_Token",self.soundCloudToken),deferred.resolve(self.soundCloudToken)}),promise.then(function(){return self.me()})},this.logOut=function(){var deferred=$q.defer(),promise=deferred.promise;return self.soundCloudToken=void 0,self.soundCloudUser=void 0,$cookieStore.remove("SC_Token"),$cookieStore.remove("SC_User"),deferred.resolve(),promise},this.me=function(){self.meDeferred=$q.defer(),SC.get("/me",self.meCallBack);var promise=self.meDeferred.promise;return promise.then(function(response){return response}),promise},this.meCallBack=function(response){self.soundCloudUser=response,$cookieStore.put("SC_User",self.soundCloudUser),self.meDeferred.resolve(self.soundCloudUser)}}]),angular.module("septWebRadioServices"),angular.module("septWebRadioServices").service("swrDragAndDropService",["$rootScope",function($rootScope){var self=this;this.dragItems=[],this.addDraggedItem=function($item){-1===_.indexOf(self.dragItems,$item)&&self.dragItems.push($item),$rootScope.$emit("SWR-DRAG-START-NUMBER",_.size(self.dragItems))},this.removeDraggedItem=function($item){self.dragItems=_.without(self.dragItems,$item),$rootScope.$emit("SWR-DRAG-END-NUMBER")},this.getDraggedItems=function(){return self.dragItems},this.removeAllDraggedItems=function(){self.dragItems.splice(0,self.dragItems.length)}}]),angular.module("septWebRadioServices"),angular.module("septWebRadioServices").service("userServices",["$http","$window","$location","growl",function($http,$window,$location,growl){var self=this;this.user=void 0,this.init=function(){try{self.user=JSON.parse($window.windowsUser),null===self.user&&(self.user=void 0)}catch(e){self.user=void 0}},this.getUser=function(){return self.user},this.isConnected=function(){return!angular.isUndefined(self.user)},this.getName=function(){return self.user?self.user.username:""},this.signUp=function(user){$http.post("/users",user).success(function(data){if(data.error)switch(self.user=void 0,data.error.errorCode){case 11e3:growl.addErrorMessage("The username or email is not available!");break;default:growl.addErrorMessage("Error when Sign Up!")}else self.user=data.user,$location.path("/stage"),growl.addSuccessMessage("Account successfully created!")})},this.logIn=function(user){$http.post("/users/session",user).success(function(data){data.error?(self.user=void 0,growl.addErrorMessage("Error when connecting: "+data.error.message)):(self.user=data.user,$location.path("/stage"),growl.addSuccessMessage("Successfully connected!"))})},this.logOut=function(){$http.get("/signout").success(function(){self.user=void 0,growl.addSuccessMessage("Successfully disconnected!")})}}]),angular.module("septWebRadioServices"),angular.module("septWebRadioServices").service("playlistServices",["Playlists","growl","$modal","$cacheFactory",function(Playlists,growl,$modal,$cacheFactory){var self=this;this.playlists=void 0,this.cache=$cacheFactory("playlistServices"),this.getPlaylists=function(){return self.playlists},this.initPlaylists=function(){self.playlists=self.cache.get("playlists"),self.playlists||Playlists.query(function(playlists){self.playlists=playlists,self.cache.put("playlists",playlists)})},this.createPlaylistItems=function(itemIds){var itemsToCreate=[];return angular.forEach(itemIds,function(itemId){var itemToInsert=self.createPlaylistItem(itemId);itemsToCreate.push(itemToInsert)}),itemsToCreate},this.createPlaylistItem=function(itemId){return{provider:"soundcloud",musicId:itemId}},this.findPlaylistById=function(playlistId){var playlistFound;return angular.forEach(self.playlists,function(playlist){return playlist._id===playlistId?(playlistFound=playlist,void 0):void 0}),playlistFound},this.createOrUpdatePlaylist=function(playlistIds,itemIds){var selectedPlaylistsSize=_.size(playlistIds);selectedPlaylistsSize>0?_.size(itemIds)>0?self.addItemsToPlaylists(playlistIds,itemIds):self.createPlaylistModal(itemIds):self.createPlaylistModal(itemIds)},this.createPlaylistWithItems=function(playlistName,itemIds,done){var playlistItems=self.createPlaylistItems(itemIds),playlist=new Playlists({name:playlistName,items:playlistItems});playlist.$save(function(response){angular.isUndefined(self.playlists)&&(self.playlists=[]),self.playlists.push(response),growl.addSuccessMessage("Playlist successfully created!"),done(response)})},this.addItemsToPlaylists=function(playlistIds,itemIds){angular.forEach(playlistIds,function(playlistId){self.addItemsToPlaylist(playlistId,itemIds)})},this.addItemsToPlaylist=function(playlistId,itemIds){var playlistItems=self.createPlaylistItems(itemIds),playlist=self.findPlaylistById(playlistId);void 0!==playlist?(playlist.items||(playlist.items=[]),angular.forEach(playlistItems,function(playlistItem){playlist.items.push(playlistItem)}),playlist.$update(function(response){playlist=response,growl.addSuccessMessage(_.size(itemIds)+" items has been added to the playlist: "+playlist.name)})):growl.addErrorMessage("You have to select a valid playlist!")},this.createPlaylistModal=function(itemIds){$modal.open({templateUrl:"createPlaylistModal.html",controller:function($scope,$modalInstance,itemIds){$scope.itemIds=itemIds,$scope.playlist={},$scope.createPlaylist=function(createPlaylistForm){createPlaylistForm.$valid&&self.createPlaylistWithItems($scope.playlist.name,$scope.itemIds,function(response){$modalInstance.close(response)})},$scope.cancel=function(){$modalInstance.dismiss("cancel")}},resolve:{itemIds:function(){return itemIds}}})}}]),angular.module("septWebRadioControllers",["septWebRadioServices"]),angular.module("septWebRadioControllers").controller("IndexCtrl",["$scope",function($scope){$scope.init=function(){$scope.initPageTitle()}}]),angular.module("septWebRadioControllers").controller("BackstageCtrl",["$scope",function($scope){$scope.init=function(){$scope.initPageTitle("Back Stage")}}]),angular.module("septWebRadioControllers").controller("DoorCtrl",["$scope",function($scope){$scope.init=function(){$scope.initPageTitle("Door")}}]),angular.module("septWebRadioControllers").controller("MainCtrl",["$scope","applicationServices","Page","$location","userServices",function($scope,applicationServices,Page,$location,userServices){$scope.user=userServices.getUser(),$scope.userServices=userServices,$scope.Page=Page,$scope.init=function(){$scope.userServices.init(),applicationServices.getInitApplication().then(function(data){$scope.connexionButtonLabel=applicationServices.getConnexionLabel()})},$scope.logInLogOutClick=function(){applicationServices.logInLogOut().then(function(label){$scope.connexionButtonLabel=label})},$scope.go=function(path){(void 0===path||""===path)&&(path="/index"),$location.path(path)},$scope.logOutClick=function(){userServices.logOut()},$scope.initPageTitle=function(title){Page.setTitle(title)}}]),angular.module("septWebRadioControllers").controller("ReplayCtrl",["$scope",function($scope){$scope.init=function(){$scope.initPageTitle("Replay")}}]),angular.module("septWebRadioControllers").controller("StageCtrl",["$scope","soundcloudSearch","utilities","$rootScope","playlistServices",function($scope,soundcloudSearch,utilities,$rootScope,playlistServices){$scope.isSearching=!1,$scope.searchedTerm=void 0,$scope.searchedItems=[],$scope.playlistServices=playlistServices,$scope.selectedPlaylistIds=[],$scope.selectedItemIds=[],$scope.isSingleDragAndDrop=!1,$scope.init=function(){$scope.initPageTitle("Stage"),$scope.userServices.isConnected()&&$scope.playlistServices.initPlaylists()},$scope.search=function(){$scope.searchedTerm&&""!==$scope.searchedTerm&&$scope.searchedTerm.length>=2?($scope.isSearching=!0,soundcloudSearch.autoCompleteSearch($scope.searchedTerm).then(function(response){$scope.searchedItems=utilities.unionWithId($scope.searchedItems,response),$scope.isSearching=!1})):($scope.isSearching=!1,$scope.searchedItems.splice(0,$scope.searchedItems.length))},$scope.dropped=function(droppedItems){var itemIds=angular.copy(droppedItems);playlistServices.createOrUpdatePlaylist($scope.selectedPlaylistIds,itemIds)},$scope.clickOnCreateButton=function(){playlistServices.createOrUpdatePlaylist($scope.selectedPlaylistIds,$scope.selectedItemIds)},$scope.getButtonLabel=function(){var selectedPlaylistsSize=_.size($scope.selectedPlaylistIds),selectedItemssSize=_.size($scope.selectedItemIds),label="";return $scope.isSingleDragAndDrop&&(selectedItemssSize=1),selectedPlaylistsSize>0?selectedItemssSize>0?(label="Add "+selectedItemssSize,1===selectedItemssSize?label+=" item":selectedItemssSize>1&&(label+=" items"),label+=" to "+selectedPlaylistsSize,label+=1===selectedPlaylistsSize?" playlist":" playlists"):label="Create a new playlist":selectedItemssSize>0?(label="Create a new playlist with "+selectedItemssSize,1===selectedItemssSize?label+=" item":selectedItemssSize>1&&(label+=" items")):label="Create a new playlist",label},$scope.togglePlaylist=function(playlistId){$scope.selectedPlaylistIds=utilities.addOrRemoveItem($scope.selectedPlaylistIds,playlistId)},$scope.toggleSelectItem=function(toggleItem){$scope.$apply($scope.selectedItemIds=utilities.addOrRemoveItem($scope.selectedItemIds,toggleItem))},$rootScope.$on("SWR-DRAG-START-NUMBER",function(event,numberItems){$scope.$apply($scope.isSingleDragAndDrop=1===numberItems)}),$rootScope.$on("SWR-DRAG-END-NUMBER",function(){$scope.$apply($scope.isSingleDragAndDrop=!1)})}]),angular.module("septWebRadioControllers").controller("TopicalCtrl",["$scope",function($scope){$scope.init=function(){$scope.initPageTitle("Topical")}}]),angular.module("septWebRadioControllers").controller("SignCtrl",["$scope","$location","userServices",function($scope,$location,userServices){$scope.user={},$scope.logInUser={},$scope.$location=$location,$scope.init=function(){"/signup"===$scope.$location.$$url?$scope.initPageTitle("Sign Up"):"/login"===$scope.$location.$$url?$scope.initPageTitle("Log In"):$scope.initPageTitle()},$scope.createUser=function(userForm){userForm&&userForm.$valid&&userServices.signUp($scope.user)},$scope.logInUserAction=function(logInForm){logInForm&&logInForm.$valid&&userServices.logIn($scope.logInUser)}}]),angular.module("septWebRadioDirectives",[]),angular.module("septWebRadioDirectives").directive("swrDelayedInput",["$timeout",function($timeout){return{restrict:"A",scope:{ngModel:"=",swrDelayedInputDelayedTime:"=",swrDelayedInputCallback:"&"},link:function(scope){var timer=!1,delayedTime="undefined"!=typeof scope.swrDelayedInputDelayedTime?scope.swrDelayedInputDelayedTime:500;"function"==typeof scope.swrDelayedInputCallback&&scope.$watch("ngModel",function(newVal,oldVal){newVal!==oldVal&&newVal&&(timer&&$timeout.cancel(timer),timer=$timeout(function(){scope.swrDelayedInputCallback()},delayedTime))})}}}]).directive("autoFillableField",[function(){return{restrict:"A",require:"?ngModel",link:function(scope,element,attrs,ngModel){setInterval(function(){var previousValue="";angular.isUndefined(attrs.xAutoFillPrevVal)||(previousValue=attrs.xAutoFillPrevVal),element.val()!==previousValue&&(angular.isUndefined(ngModel)?(element.trigger("input"),element.trigger("change"),element.trigger("keyup"),attrs.xAutoFillPrevVal=element.val()):""===element.val()&&ngModel.$pristine||(attrs.xAutoFillPrevVal=element.val(),scope.$apply(function(){ngModel.$setViewValue(element.val())})))},300)}}}]),angular.module("septWebRadioDirectives"),angular.module("septWebRadioDirectives").controller("swrDragController",["$rootScope","$scope","$element","swrDragAndDropService","$animate",function($rootScope,$scope,$element,swrDragAndDrop,$animate){var self=this;this.init=function(){$element.drag("init",self.dragInit),$element.drag("start",self.dragStart),$element.drag(self.drag,{relative:!0}),$element.drag("end",self.dragEnd),$element.on("$destroy",self.cleanDrag)},this.dragInit=function(){return $element.hasClass("swr-select")?jQuery(".swr-select"):void 0},this.dragStart=function(){swrDragAndDrop.addDraggedItem($element.attr("data-item-id")),$element.addClass("swr-drag-start"),$rootScope.$emit("SWR-DRAG-START",$element)},this.drag=function(ev,dd){$element.css({top:dd.offsetY,left:dd.offsetX})},this.dragEnd=function(ev,dd){swrDragAndDrop.removeDraggedItem($element.attr("data-item-id")),$rootScope.$emit("SWR-DRAG-END",$element),$animate.removeClass($element,"swr-drag-start"),$element.animate({top:dd.originalY,left:dd.originalX},600)},this.cleanDrag=function(){$element.unbind("draginit",this.dragInit),$element.unbind("dragstart",this.dragStart),$element.unbind("drag",this.drag),$element.unbind("dragend",this.dragEnd),$element.unbind("$destroy",this.cleanDrag)}}]).directive("swrDraggable",[function(){return{restrict:"A",controller:"swrDragController",link:function(scope,element,attrs,ctrl){ctrl.init()}}}]).controller("swrDropController",["$rootScope","$scope","$element","swrDragAndDropService",function($rootScope,$scope,$element,swrDragAndDropService){var self=this;this.onSwrDragStart=function(){$element.addClass("swr-drop-target")},$rootScope.$on("SWR-DRAG-START",self.onSwrDragStart),this.onSwrDragEnd=function(){$element.removeClass("swr-drop-target"),$element.removeClass("swr-drop-over")},$rootScope.$on("SWR-DRAG-END",self.onSwrDragEnd),this.dropStart=function(){$element.addClass("swr-drop-over")},this.drop=function(){var draggedItems=swrDragAndDropService.getDraggedItems();_.size(draggedItems)<=0||($scope.swrDropTargetOnDrop({droppedItems:draggedItems}),swrDragAndDropService.removeAllDraggedItems())},this.dropEnd=function(){$element.removeClass("swr-drop-over")},this.cleanDrop=function(){$element.unbind("dropstart",this.dropStart),$element.unbind("drop",this.drop),$element.unbind("dropend",this.dropEnd),$element.unbind("SWR-DRAG-START"),$element.unbind("SWR-DRAG-END")}}]).directive("swrDropTarget",[function(){return{restrict:"A",controller:"swrDropController",scope:{swrDropTargetOnDrop:"&"},link:function(scope,element,attrs,ctrl){element.drop("start",ctrl.dropStart),element.drop(ctrl.drop),element.drop("end",ctrl.dropEnd),element.on("$destroy",ctrl.cleanDrop)}}}]),angular.module("septWebRadioDirectives"),angular.module("septWebRadioDirectives").directive("swrSelect",[function(){return{restrict:"A",scope:{swrSelectCallback:"&"},link:function(scope,element,attrs){var swrSelectClass=void 0!==attrs.swrSelectClass?attrs.swrSelectClass:"swr-select";element.bind("click",function(){var elementId=element.attr("data-item-id");element.attr("selected")?(element.removeClass(swrSelectClass),element.removeAttr("selected"),scope.swrSelectCallback({toggleItem:elementId})):(element.addClass(swrSelectClass),element.attr("selected",!0),scope.swrSelectCallback({toggleItem:elementId}))})}}}]),angular.module("septWebRadioDirectives").directive("swrSoundcloudPlayer",[function(){return{restrict:"A",link:function(scope,element,attrs){var config="&amp;auto_play=true&amp;download=true&amp;show_comments=false",widgetUrl="https://soundcloud.com/lapause/sets/la-pause-playlist-21"+config,sourceUrl=location.protocol+"//w.soundcloud.com/player/?url="+widgetUrl;element.attr("src",sourceUrl),SC.Widget(attrs.id)}}}]),angular.module("septWebRadioFactories",[]),angular.module("septWebRadioFactories"),angular.module("septWebRadioFactories").factory("utilities",[function(){var utilitiesService={};return utilitiesService.removeObjectById=function(list,idToRemove){return utilitiesService.removeObjectByAttribute(list,idToRemove,"id")},utilitiesService.removeObjectByAttribute=function(list,itemToRemove,attributeName){for(var elementLoop,listSize=_.size(list),index=0;listSize>index;index++)if(elementLoop=list[index],elementLoop&&elementLoop[attributeName]===itemToRemove){list.splice(index,1);break}return list},utilitiesService.listContainsId=function(list,idToRemove){return utilitiesService.listContainsAttribute(list,idToRemove,"id")},utilitiesService.listContainsAttribute=function(list,attributeToTest,attributeName){return _.find(list,function(newItem){return attributeToTest===newItem[attributeName]})},utilitiesService.unionWithAttribute=function(listTo,listFrom,attributeToTest){for(var element,even,removed=0,oldListSize=_.size(listTo),index=0;oldListSize>index;index++)element=listTo[index-removed],even=utilitiesService.listContainsAttribute(listFrom,element[attributeToTest],attributeToTest),void 0===even?(listTo.splice(index-removed,1),removed++):listFrom=utilitiesService.removeObjectByAttribute(listFrom,element[attributeToTest],attributeToTest);return listTo.concat(listFrom)},utilitiesService.unionWithId=function(listTo,listFrom){return utilitiesService.unionWithAttribute(listTo,listFrom,"id")},utilitiesService.addOrRemoveItem=function(list,item){return-1===_.indexOf(list,item)?list.push(item):list=_.without(list,item),list},utilitiesService}]),angular.module("septWebRadioFactories"),angular.module("septWebRadioFactories").factory("Page",[function(){var defaultTitle="Sept Web Radio",title=defaultTitle;return{title:function(){return title},setTitle:function(newTitle){title=void 0===newTitle||""===newTitle?defaultTitle:defaultTitle+" - "+newTitle}}}]),angular.module("septWebRadioFactories"),angular.module("septWebRadioFactories").factory("Playlists",["$resource",function($resource){return $resource("playlists/:playlistId",{playlistId:"@_id"},{update:{method:"PUT"}})}]);